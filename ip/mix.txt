task - 1 : gussing game
1] puts "Welcome to the guessing game!"
2] get input from the user: number between 0 to 100 [GUSSING_NUMBER]
3] generate a random number between 0 to 100 [WINNING_NUMBER]

GUSSING_NUMBER == WINNING_NUMBER:
puts "Congrats, You win!. (you win after gussing (count) times)"

GUSSING_NUMBER < WINNING_NUMBER :
puts "Your guess is too low. Try again."

GUSSING_NUMBER > WINNING_NUMBER :
puts "Your guess is too high. Try again."

4] set Guess counter

5] restart the game if user want to continue

task - 2] bill generator
task - 3] ticket generator
task - 4] movie ticket
task - 5] food order
task - 6] electicity bill 


31-7-2024]
-------------------
task - 7] char name[] = "PyThoN cOde"
- lower_case - "python code"
- upper_case - "PYTHON CODE"
- swap_case - "pYtHOn CoDE"
- title_case - "Python Code"
- capitlize_case - "Python code"
- length_count - 11


"PyThoN cOde"

#include <stdio.h>

void lower_case(char arr[], int len){
    for(int pos = 0; pos<len;pos++){
        if ((arr[pos] >= 'A') && (arr[pos] <='Z')){
            printf("%c", arr[pos] + 32);
            continue;
        }
        printf("%c", arr[pos]);
    }
}

int main() {
    char name[] = "PyThoN cOde";
    
    // printf("Enter your name: ");
    // // scanf("%s", &name);
    // fgets(name, sizeof(name), stdin);
    int len = sizeof(name)/sizeof(name[0]);
    lower_case(name, len);

    return 0;
}


TASK - 8] Write a C program to print the following pattern:


* * * * * * * * * 
*   *   *   *   *
* * *   *   *   *
*       *   *   *
* * * * *   *   *
*           *   *
* * * * * * *   *
*               *
* * * * * * * * *

*
*   
* * *  
*       
* * * * *   
*           
* * * * * * *   
*               
* * * * * * * * *

* * * * * * * * * 
-   *   *   *   *
- - *   *   *   *
-       *   *   *
- - - - *   *   *
-           *   *
- - - - - - *   *
-               *
- - - - - - - - *

TASK-9] 
* * * * * 
  *       * 
    *       * 
      *       * 
        * * * * *

    *****
   *   *
  *   *
 *   *
*****


*     * * * *
*     *
*     *
* * * * * * *
      *     *
      *     *
* * * *     *

**       ** ** ** **
**       ** ** ** **
**       **
**       **
** ** ** ** ** ** **
** ** ** ** ** ** **
         **       **
         **       **
         **       **
** ** ** **       **
** ** ** **       **

printf("*")
printf("**")
printf("***")
printf("****")
printf("*****")

Task 10:  write a function for check password. if password is correct then print "password is correct" otherwise "Incorrect password".

- atleast 8 char
- at least one uppercase letter
- at least one lowercase letter
- at least one digit
- at least one special character [@, _, -, !]

Task 11: write a functions:

s-1] get the input from the users as string
s-2] function: count lower_case characters
s-3] function: count upper_case characters
s-4] function: count digits
s-5] function: count special characters
s-6] function: count total words in a given string
s-7] function: count total characters in a given string
s-8] function: count the number of vowels in the string.
s-9] function: count the number of consonants in the string



Task 12] write a function:
s-1] get the input from the user as string
s-2] function: check string is palindrom or not [nayan]

s-3] function: check string is anagram or not
s-4] function: check string is subsequence or not
s-5] function: check string is rotation of another string or not

